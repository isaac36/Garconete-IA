<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize();

vetor=array_create(3);
pedidos=array_create(0);

global.anotarx = obj_balcao.x;
global.anotary = obj_balcao.y;

global.entregarcomidax = obj_balcao.x;
global.entregarcomiday = obj_balcao.y;


final_do_vetor=array_length_1d(vetor)-1;
indice_atual=2;
cont=0;
debug_estado="anotar_pedido"
estadoteste = anotar_pedido;
pegueicomida = false;






vetor[0]=entregar_comida;
vetor[1]=pegar_comida;
vetor[2]=anotar_pedido;







//PATHFINDING


path = path_add();

target_x = objetivo.x;
target_y = objetivo.y;

alarm[0] = 1;




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//update

path_delete(path);
path = path_add();



//onde vamos

target_x = objetivo.x;
target_y = objetivo.y;

//usando a grid do cenario
mp_grid_path(obj_setup.grid,path,x,y,target_x,target_y,1);



path_start(path,0.5,path_action_stop,true)





//loop

alarm_set(0,120);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth =-y;

if(keyboard_check(vk_escape)){game_restart()};

image_xscale = 1.5;
image_yscale = 1.5;

if(pegueicomida==true){sprite_index=sprite9}else{sprite_index=sprite2}


//if(indice_atual==-1){indice_atual=2}
//script_execute(vetor[indice_atual]);



if(pegueicomida==true){estado=entregar_comida}else
if(instance_exists(obj_balcao))and(obj_balcao.pedido&gt;0){estado=pegar_comida;}else
if(instance_exists(obj_mesa_cardapio)){estado=anotar_pedido}else
estado=esperar;

script_execute(estado);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

/*for(i=0;i&lt;array_length_1d(vetor);i++)
{

draw_text(50,50*(i+1),vetor[i]);

}*/

draw_set_colour(c_black);
draw_text(50,50,"estado: " + string(debug_estado));
draw_text(50,100,"target_x: " + string(target_x));
draw_text(50,150,"target_y: " + string(target_y));
draw_text(50,200,"x: " + string(x));
draw_text(50,250,"y: " + string(y));

draw_text(50,300,"existe?: " + string(instance_exists(obj_garconete)));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
